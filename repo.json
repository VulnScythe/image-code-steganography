{
  "name": "image-code-steganography",
  "description": "Educational project demonstrating simple code-in-image steganography: embedding, extracting, and executing hidden Python scripts.",
  "private": false,
  "license_template": "mit",
  "gitignore_template": "Python",
  "auto_init": true,
  "has_issues": true,
  "has_projects": false,
  "has_wiki": false,
  "files": {
    "embed_code.py": "# Script to hide Python code inside an image\n\nimport sys\n\ndef embed_code(image_path, code_path, output_path):\n    with open(image_path, 'rb') as img_file:\n        img_bytes = img_file.read()\n\n    with open(code_path, 'rb') as code_file:\n        code_bytes = code_file.read()\n\n    marker = b\"###HIDDEN_CODE###\"\n    combined = img_bytes + marker + code_bytes\n\n    with open(output_path, 'wb') as out_file:\n        out_file.write(combined)\n\n    print(f\"[+] Code embedded into {output_path}\")\n\nif __name__ == \"__main__\":\n    if len(sys.argv) != 4:\n        print(\"Usage: python embed_code.py <image.png> <code.py> <output.png>\")\n    else:\n        embed_code(sys.argv[1], sys.argv[2], sys.argv[3])\n",
    "auto_extract_and_run.py": "# Script to extract and run hidden Python code from an image\n\nimport sys\nimport subprocess\nimport tempfile\nimport os\n\nIMAGE_PATH = \"infected.png\"\n\ndef extract_and_run():\n    with open(IMAGE_PATH, 'rb') as file:\n        data = file.read()\n\n    marker = b\"###HIDDEN_CODE###\"\n    marker_index = data.find(marker)\n\n    if marker_index == -1:\n        print(\"[-] No hidden code found in the image.\")\n        return\n\n    code_bytes = data[marker_index + len(marker):]\n\n    tmp_file = tempfile.NamedTemporaryFile(delete=False, suffix=\".py\")\n    tmp_file.write(code_bytes)\n    tmp_file.close()\n\n    print(f\"[+] Extracted code to: {tmp_file.name}\")\n    print(\"[+] Executing hidden code...\")\n\n    subprocess.run([sys.executable, tmp_file.name])\n    os.remove(tmp_file.name)\n\nif __name__ == \"__main__\":\n    extract_and_run()\n",
    "README.md": "# üñºÔ∏è Image Code Steganography\n\nThis project demonstrates a simple **steganography-like technique** where Python code can be hidden inside an image file and later extracted and executed.\n\n‚ö†Ô∏è **Disclaimer**  \nThis repository is created for **educational purposes only** (e.g., security research, teaching steganography concepts).  \nDo **not** use it to spread malware or execute untrusted code.\n\n---\n\n## üöÄ Features\n- Embed Python code inside any image file (`.png`, `.jpg`, etc.).\n- Extract the hidden code back.\n- Execute the extracted code automatically.\n\n---\n\n## üìÇ Repository Structure\n```\nembed_code.py           ‚Üí Script to hide code in an image\nauto_extract_and_run.py ‚Üí Script to extract and run hidden code\nexample.png             ‚Üí Example carrier image\nREADME.md               ‚Üí Documentation\nLICENSE                 ‚Üí Open-source license\n```\n\n---\n\n## üõ†Ô∏è How It Works\n\n1. **Embedding code**\n   ```bash\n   python embed_code.py example.png secret_code.py infected.png\n   ```\n\n2. **Extracting & Running automatically**\n   ```bash\n   python auto_extract_and_run.py\n   ```\n\n---\n\n## üìú License\nThis project is licensed under the [MIT License](LICENSE).\n",
    "LICENSE": "MIT License\n\nCopyright (c) 2025 \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    ".gitignore": "__pycache__/\n*.pyc\n*.pyo\n*.tmp\n*.DS_Store\n.env\n"
  }
}
